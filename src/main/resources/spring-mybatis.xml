<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
					    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
					    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
					    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 3.配置数据源 ，使用的alibba的数据库-->
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">  
       <property name="driverClassName" value="com.mysql.jdbc.Driver"/>  
       <property name="url" value="${jdbc_url}"/>  
       <property name="username" value="${jdbc_username}"/>  
       <property name="password" value="${jdbc_password}"/>  
       <!--maxActive: 最大连接数量-->  
       <property name="maxActive" value="100"/>  
       <!--minIdle: 最小空闲连接-->  
       <property name="minIdle" value="10"/>  
       <!--maxIdle: 最大空闲连接-->  
       <property name="maxIdle" value="15"/>  
       <!--initialSize: 初始化连接-->  
       <property name="initialSize" value="10"/>  
       <!-- 连接被泄露时是否打印 -->  
       <property name="logAbandoned" value="true"/>  
       <!-- removeAbandoned: 是否自动回收超时连接 -->  
       <property name="removeAbandoned" value="true"/>  
       <!-- removeAbandonedTimeout: 超时时间(以秒数为单位) -->  
       <property name="removeAbandonedTimeout" value="10"/>  
       <!-- maxWait: 超时等待时间以毫秒为单位 1000等于60秒 -->  
       <property name="maxWait" value="60000"/>  
       <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
       <property name="timeBetweenEvictionRunsMillis" value="10000"/>  
       <!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
       <property name="numTestsPerEvictionRun" value="10"/>  
       <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程 -->  
       <property name="minEvictableIdleTimeMillis" value="10000"/>  
       <property name="validationQuery" value="SELECT 1 FROM DUAL"/>  
	   <!-- 定时对线程池中的链接进行validateObject校验，对无效的链接进行关闭 -->  
	   <!--  <property name="testWhileIdle" value="true"/>   -->  
	   <!-- 指定在从连接池中拿连接时，要检查连接是否有效，若无效会将连接从连接池中移除掉 -->  
	   <property name="testOnBorrow" value="true"/>   
    </bean>
     
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" /> 
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/recover/yqh/mapper/*.xml" />  
    </bean>   
    
     <!-- DAO接口所在包名，Spring会自动查找其下的类 ,自动扫描了所有的XxxxMapper.xml对应的mapper接口文件,只要Mapper接口类和Mapper映射文件对应起来就可以了-->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.recover.yqh.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
    
	<!-- 配置事务管理器 -->
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 

    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
</beans>